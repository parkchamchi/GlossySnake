# Generated by Django 4.1.7 on 2024-08-27 12:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CorpusHeaderV3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='CorpusHeaderV4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DjCorpusV3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('original_text', models.TextField()),
                ('p_div_locs', models.TextField()),
                ('index', models.IntegerField()),
                ('corpus_header_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.corpusheaderv3')),
            ],
            options={
                'unique_together': {('corpus_header_id', 'index')},
            },
        ),
        migrations.CreateModel(
            name='DjCorpusV4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('original_text', models.TextField()),
                ('p_div_locs', models.TextField()),
                ('index', models.IntegerField()),
                ('corpus_header_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.corpusheaderv4')),
            ],
            options={
                'unique_together': {('corpus_header_id', 'index')},
            },
        ),
        migrations.CreateModel(
            name='DjParagraphDelimiterV3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('char', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DjParagraphDelimiterV4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('char', models.TextField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='DjParagraphV3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pstate', models.CharField(choices=[('PLAIN', 'PLAIN'), ('DIVIDED', 'DIVIDED'), ('PARSED', 'PARSED'), ('ANNOTATED', 'ANNOTATED')], max_length=16)),
                ('is_delimiter', models.BooleanField()),
                ('token_delimiters', models.TextField()),
                ('annotator_info', models.TextField()),
                ('original_text', models.TextField()),
                ('index', models.IntegerField()),
                ('corpus_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.djcorpusv3')),
            ],
            options={
                'unique_together': {('corpus_id', 'index')},
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('task_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('target_corpus_id', models.BigIntegerField()),
                ('status', models.CharField(choices=[('READY', 'Ready'), ('RUNNING', 'Running'), ('FINISHED', 'Finished'), ('ERROR', 'Error'), ('ABORTED', 'Aborted')], default='READY', max_length=16)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedCorpus',
            fields=[
                ('corpus_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('corpuses_history', models.JSONField(null=True)),
                ('current_task', models.BigIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskInfoV4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('READY', 'Ready'), ('RUNNING', 'Running'), ('FINISHED', 'Finished'), ('ERROR', 'Error'), ('ABORTED', 'Aborted')], default='READY', max_length=16)),
                ('target_corpus_header_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.corpusheaderv4')),
            ],
        ),
        migrations.CreateModel(
            name='TaskInfoV3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('READY', 'Ready'), ('RUNNING', 'Running'), ('FINISHED', 'Finished'), ('ERROR', 'Error'), ('ABORTED', 'Aborted')], default='READY', max_length=16)),
                ('target_corpus_header_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.corpusheaderv3')),
            ],
        ),
        migrations.CreateModel(
            name='DjTokenV3',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('txt', models.TextField()),
                ('gloss', models.TextField(null=True)),
                ('is_delimiter', models.BooleanField()),
                ('index', models.IntegerField()),
                ('paragraph_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.djparagraphv3')),
            ],
            options={
                'unique_together': {('paragraph_id', 'index')},
            },
        ),
        migrations.CreateModel(
            name='DjParagraphV4',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tokens_json', models.JSONField(null=True)),
                ('pstate', models.CharField(choices=[('PLAIN', 'PLAIN'), ('DIVIDED', 'DIVIDED'), ('PARSED', 'PARSED'), ('ANNOTATED', 'ANNOTATED')], max_length=16)),
                ('is_delimiter', models.BooleanField()),
                ('token_delimiters', models.TextField()),
                ('annotator_info', models.TextField()),
                ('original_text', models.TextField()),
                ('index', models.IntegerField()),
                ('lang_from', models.TextField(null=True)),
                ('lang_to', models.TextField(null=True)),
                ('annotator_name', models.TextField(null=True)),
                ('corpus_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.djcorpusv4')),
            ],
            options={
                'unique_together': {('corpus_id', 'index')},
            },
        ),
        migrations.CreateModel(
            name='DjParagraphDelimitersInCorpusV4',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corpus_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.djcorpusv4')),
                ('paragraph_delimiter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.djparagraphdelimiterv4')),
            ],
            options={
                'unique_together': {('corpus_id', 'paragraph_delimiter_id')},
            },
        ),
        migrations.CreateModel(
            name='DjParagraphDelimitersInCorpusV3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('corpus_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.djcorpusv3')),
                ('paragraph_delimiter_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='upload.djparagraphdelimiterv3')),
            ],
            options={
                'unique_together': {('corpus_id', 'paragraph_delimiter_id')},
            },
        ),
    ]
